#!/usr/bin/env node
const {encrypt, decrypt} = require("hsencrypt");
const {WalletClient, NodeClient} = require('hs-client');
const {Network} = require('hsd');
const fs = require('fs');
const network = Network.get('main');
const ConsoleIO = new (require("consoleinout"))(console);
const constants = require('./lib/constants.js');


const argv = process.argv;
const argc = process.argv.length;

const nodeOptions = {
  network: network.type,
  port: network.rpcPort,
  apiKey: fs.readFileSync("keys/node").toString().trim()
}
const walletOptions = {
  port: network.walletPort,
  apiKey: fs.readFileSync("keys/wallet").toString().trim()
}
const nodeClient = new NodeClient(nodeOptions);
const _walletClient = new WalletClient(walletOptions);
let walletClient;

if(argc != 4 && argc != 5) {
  console.log("Usage: ",argv[1],"<wallet>","<name>");
  process.exit(0);
}

(async function() {

  walletClient = _walletClient.wallet(argv[2]);
  if(!walletClient) {
    console.log("Wallet ",argv[2],"not found");
    process.exit(0);
  }

  console.output("Enter Password: ");
  const password = await console.input(true);

  let posts = fs.readFileSync(__dirname+"/.posts").toString().split("\n");
  if(argc==4) {
    for(let x=0;x<posts.length;x++) {
      let post = posts[x].split(",");
      let success=true;
      let decrypted;
      try {
        let _enc = post[2].split("$$$");
        decrypted=await decrypt(walletClient, nodeClient, password, post[1], argv[3], _enc[1], _enc[0]);
      } catch(e) {
        success=false;
      }
      if(success)
        console.log("Decrypted from "+post[1]+" at "+post[0]+": ",decrypted);
    }
    process.exit();
  }
})();
